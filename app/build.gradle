plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.lb.documentsprovidersample'
    compileSdk 33
    buildFeatures {
        buildConfig = true
    }
    defaultConfig {
        applicationId "com.lb.documentsprovidersample"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        def documentsAuthorityValue = applicationId + ".documents"
        // Now we can use ${documentsAuthority} in our Manifest
        manifestPlaceholders =
                [documentsAuthority: documentsAuthorityValue]
        // Now we can use BuildConfig.DOCUMENTS_AUTHORITY in our code
        buildConfigField "String",
                "DOCUMENTS_AUTHORITY",
                "\"${documentsAuthorityValue}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    //  https://github.com/AndroidDeveloperLB/CommonUtils  https://jitpack.io/#AndroidDeveloperLB/CommonUtils/
    implementation 'com.github.AndroidDeveloperLB:CommonUtils:14'
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'

    final def lifecycle_version = '2.6.0-alpha04'
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    //Annotation processor  alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
}
